package dao;

import model.User;
import util.DBUtil;

import java.sql.*;

public class UserDAO {

	public boolean registerUser(String userName, String email, String password, String phoneNo, int roleID) {
        boolean isRegistered = false;
        String sql = "INSERT INTO user (UserName, Email, Password, PhoneNo, RoleID) VALUES (?, ?, ?, ?, ?)";

        try (Connection connection = DBUtil.getConnection();
             PreparedStatement stmt = connection.prepareStatement(sql)) {

            stmt.setString(1, userName);
            stmt.setString(2, email);
            stmt.setString(3, password);  // You should hash the password before storing it in a real application
            stmt.setString(4, phoneNo);
            stmt.setInt(5, roleID);

            int rowsAffected = stmt.executeUpdate();
            if (rowsAffected > 0) {
                isRegistered = true;
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }

        return isRegistered;
    }

    // Get User by Email (for login)
    public User getUserByEmail(String email) {
        User user = null;
        try (Connection connection = DBUtil.getConnection()) {
            String sql = "SELECT * FROM user WHERE Email = ?";
            PreparedStatement stmt = connection.prepareStatement(sql);
            stmt.setString(1, email);
            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                user = new User();
                user.setUserID(rs.getInt("UserID"));
                user.setUserName(rs.getString("UserName"));
                user.setEmail(rs.getString("Email"));
                user.setPassword(rs.getString("Password"));
                user.setPhoneNo(rs.getString("PhoneNo"));
                user.setRoleID(rs.getInt("RoleID"));
                user.setCreatedAt(rs.getTimestamp("CreatedAt"));
                user.setUpdatedAt(rs.getTimestamp("UpdatedAt"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return user;
    }

    // Update User
    public int updateUser(User user) {
        try (Connection connection = DBUtil.getConnection()) {
            String sql = "UPDATE user SET UserName = ?, Email = ?, Password = ?, PhoneNo = ?, RoleID = ? WHERE UserID = ?";
            PreparedStatement stmt = connection.prepareStatement(sql);
            stmt.setString(1, user.getUserName());
            stmt.setString(2, user.getEmail());
            stmt.setString(3, user.getPassword());
            stmt.setString(4, user.getPhoneNo());
            stmt.setInt(5, user.getRoleID());
            stmt.setInt(6, user.getUserID());

            return stmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return 0;
    }

    // Delete User
    public int deleteUser(int userID) {
        try (Connection connection = DBUtil.getConnection()) {
            String sql = "DELETE FROM user WHERE UserID = ?";
            PreparedStatement stmt = connection.prepareStatement(sql);
            stmt.setInt(1, userID);
            return stmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return 0;
    }

	
}
