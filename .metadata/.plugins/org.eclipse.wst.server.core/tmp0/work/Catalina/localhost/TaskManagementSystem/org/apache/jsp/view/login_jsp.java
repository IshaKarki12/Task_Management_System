/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.4
 * Generated at: 2025-04-19 12:59:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

    if (session.getAttribute("currentUser") != null) {
        String userRole = (String) session.getAttribute("userRole");
        if ("Admin".equals(userRole)) {
            response.sendRedirect("admin-dashboard.jsp");
        } else if ("User".equals(userRole)) {
            response.sendRedirect("user-dashboard.jsp");
        }
        return;
    }

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Login - Task Manager</title>\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            font-family: 'Poppins', sans-serif;\r\n");
      out.write("            background: linear-gradient(135deg, #f1c6ff, #d9f7f4, #ffecf0);\r\n");
      out.write("            height: 100vh;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            overflow: hidden;\r\n");
      out.write("            animation: gradientBackground 15s ease infinite;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @keyframes gradientBackground {\r\n");
      out.write("            0% { background: linear-gradient(135deg, #f1c6ff, #d9f7f4, #ffecf0); }\r\n");
      out.write("            50% { background: linear-gradient(135deg, #f0e4ff, #ffdaf0, #c1f7fc); }\r\n");
      out.write("            100% { background: linear-gradient(135deg, #f1c6ff, #d9f7f4, #ffecf0); }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-wrapper {\r\n");
      out.write("            background: #fff;\r\n");
      out.write("            border-radius: 16px;\r\n");
      out.write("            padding: 40px;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            max-width: 380px;\r\n");
      out.write("            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            transform: translateY(10px);\r\n");
      out.write("            opacity: 0;\r\n");
      out.write("            animation: formAppearing 0.8s ease forwards;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @keyframes formAppearing {\r\n");
      out.write("            100% {\r\n");
      out.write("                opacity: 1;\r\n");
      out.write("                transform: translateY(0);\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-wrapper h2 {\r\n");
      out.write("            font-size: 30px;\r\n");
      out.write("            color: #333;\r\n");
      out.write("            margin-bottom: 10px;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-wrapper .tagline {\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            color: #666;\r\n");
      out.write("            margin-bottom: 25px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-wrapper label {\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            color: #333;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("            margin-bottom: 6px;\r\n");
      out.write("            display: block;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-wrapper input[type=\"email\"],\r\n");
      out.write("        .login-wrapper input[type=\"password\"] {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 14px;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            background: #f7f7f7;\r\n");
      out.write("            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            color: #333;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-wrapper input[type=\"email\"]:focus,\r\n");
      out.write("        .login-wrapper input[type=\"password\"]:focus {\r\n");
      out.write("            background: #fff;\r\n");
      out.write("            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\r\n");
      out.write("            outline: none;\r\n");
      out.write("            border: 1px solid #4A90E2;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-wrapper .remember-me {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-wrapper .remember-me input {\r\n");
      out.write("            margin-right: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-wrapper input[type=\"submit\"] {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 14px;\r\n");
      out.write("            background: #4A90E2;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: 0.3s ease;\r\n");
      out.write("            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-wrapper input[type=\"submit\"]:hover {\r\n");
      out.write("            background: #357ab7;\r\n");
      out.write("            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-wrapper .error-message {\r\n");
      out.write("            color: #e74c3c;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            margin-bottom: 15px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-wrapper p {\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            color: #666;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-wrapper a {\r\n");
      out.write("            color: #4A90E2;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .login-wrapper a:hover {\r\n");
      out.write("            text-decoration: underline;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @media (max-width: 480px) {\r\n");
      out.write("            .login-wrapper {\r\n");
      out.write("                padding: 30px 25px;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .login-wrapper h2 {\r\n");
      out.write("                font-size: 26px;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .login-wrapper .tagline {\r\n");
      out.write("                font-size: 12px;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"login-wrapper\">\r\n");
      out.write("        <h2>DoTask</h2>\r\n");
      out.write("        <div class=\"tagline\">Organize. Prioritize. Succeed.</div>\r\n");
      out.write("\r\n");
      out.write("        ");
 String error = (String) request.getAttribute("error");
           if (error != null) { 
      out.write("\r\n");
      out.write("            <div class=\"error-message\">");
      out.print( error );
      out.write("</div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <form action=\"../LoginServlet\" method=\"post\">\r\n");
      out.write("            <label for=\"email\">Email</label>\r\n");
      out.write("            <input type=\"email\" name=\"email\"\r\n");
      out.write("                   value=\"");
      out.print( request.getAttribute("rememberedEmail") != null ? request.getAttribute("rememberedEmail") : "" );
      out.write("\"\r\n");
      out.write("                   placeholder=\"example@email.com\"\r\n");
      out.write("                   required>\r\n");
      out.write("\r\n");
      out.write("            <label for=\"password\">Password</label>\r\n");
      out.write("            <input type=\"password\" name=\"password\"\r\n");
      out.write("                   value=\"");
      out.print( request.getAttribute("rememberedPassword") != null ? request.getAttribute("rememberedPassword") : "" );
      out.write("\"\r\n");
      out.write("                   placeholder=\"Enter your password\"\r\n");
      out.write("                   required>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"remember-me\">\r\n");
      out.write("                <input type=\"checkbox\" name=\"remember\" ");
      out.print( request.getAttribute("rememberedEmail") != null ? "checked" : "" );
      out.write(">\r\n");
      out.write("                Remember Me\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <input type=\"submit\" value=\"Login\">\r\n");
      out.write("        </form>\r\n");
      out.write("\r\n");
      out.write("        <p>Don't have an account? <a href=\"register.jsp\">Register here</a></p>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
